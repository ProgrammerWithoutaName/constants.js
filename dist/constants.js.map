(function(window, Builder) {
  var builtExport = Builder();

  if (typeof exports === 'object') {
    // CommonJS
    module.exports = builtExport;
  } if (typeof define === 'function' && define.amd) {
    // AMD
    define(function(){
      return builtExport;
    });
  } else {
    // Browser Global (constants is your global library identifier)
    window.constants = builtExport;
  }
}(this, function() {
  var _conRq_, itemToExport;

  // this is the what is defined in browserify's "entry" item in the configBundles array.
  // located in gulp/config.js under "browserify"
  itemToExport = 1;

  _conRq_ = {"version":3,"file":"constants.js","names":[],"mappings":"","sources":["constants.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar cssClasses, ids, attributes, tags, events, localizations, build;\n\ncssClasses = require('./definitions/cssClasses');\nids = require('./definitions/ids');\nattributes = require('./definitions/attributes');\ntags = require('./definitions/tags');\nevents = require('./definitions/events');\nlocalizations = require('./definitions/localizations');\n\nbuild = function() {\n    return {\n      classes: cssClasses.build(),\n      ids: ids.build(),\n      attributes: attributes.build(),\n      tags: tags.build(),\n      events: events.build(),\n      localizations: localizations.build()\n    };\n};\n\nmodule.exports = {\n  build: build\n};\n\n},{\"./definitions/attributes\":3,\"./definitions/cssClasses\":4,\"./definitions/events\":5,\"./definitions/ids\":6,\"./definitions/localizations\":7,\"./definitions/tags\":8}],2:[function(require,module,exports){\n(function(window, Builder) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = Builder();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(Builder);\n  } else {\n    // Browser Global (dictionary is your global library identifier)\n    window.dictionary = Builder();\n  }\n}(this, function() {\n  var _dicRq_, itemToExport;\n\n  // this is the what is defined in browserify's \"entry\" item in the configBundles array.\n  // located in gulp/config.js under \"browserify\"\n  itemToExport = 1;\n\n  _dicRq_ = (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dicRq_==\"function\"&&_dicRq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dicRq_==\"function\"&&_dicRq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nvar storeManagerBuilder, dictionaryBuilder, buildDictionary;\n\nstoreManagerBuilder = _dicRq_('./dictionaryUtility/store/storeManagerBuilder');\ndictionaryBuilder = _dicRq_('./dictionaryUtility/dictionaryBuilder');\n\nbuildDictionary = function(options) {\n  var store, getValueKey;\n\n  options.reservedNames = options.reservedNames ? options.reservedNames : [];\n\n  getValueKey = options.valueKeyFunction || function(nameValue) {\n    return nameValue.value;\n  };\n\n  store = storeManagerBuilder.build({\n    getValueKey: getValueKey\n  });\n\n  options.reservedNames.forEach(store.addReservedName);\n\n  return dictionaryBuilder.build(store);\n};\n\n_dcMd_.exports = {\n  build: buildDictionary\n};\n\n},{\"./dictionaryUtility/dictionaryBuilder\":3,\"./dictionaryUtility/store/storeManagerBuilder\":12}],2:[function(_dicRq_,_dcMd_,exports){\n(function(window, Builder) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    _dcMd_.exports = Builder();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(Builder);\n  } else {\n    // Browser Global (strings is your global library identifier)\n    window.strings = Builder();\n  }\n}(this, function() {\n  var _strRq_, itemToExport;\n\n  // this is the what is defined in browserify's \"entry\" item in the configBundles array.\n  // located in gulp/config.js under \"browserify\"\n  itemToExport = 1;\n\n  _strRq_ = (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _strRq_==\"function\"&&_strRq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _strRq_==\"function\"&&_strRq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_strRq_,_stMd_,exports){\n'use strict';\n\nvar formatting = _strRq_('./utilities/formatting');\n\n_stMd_.exports = {\n  format: formatting.format\n};\n\n},{\"./utilities/formatting\":2}],2:[function(_strRq_,_stMd_,exports){\n'use strict';\n\nfunction format(stringToFormat, values) {\n  return stringToFormat.replace(/{(\\w+)}/g, function(match, value) {\n    return (values[value] !== undefined) ? values[value] : match;\n  });\n}\n\n_stMd_.exports = {\n  format: format\n};\n\n},{}]},{},[1]);\n\n\n\n  return _strRq_(itemToExport);\n}));\n},{}],3:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nfunction buildDictionary(store) {\n  var dictionary = Object.create(store.data.nameValueMap);\n\n  dictionary.$add = store.add;\n\n  return dictionary;\n}\n\n_dcMd_.exports = {\n  build: buildDictionary\n};\n\n},{}],4:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nvar nameExistsErrorDefinitionBuilder, valueExistsErrorDefinitionBuilder, reservedNameErrorDefinitionBuilder;\n\nnameExistsErrorDefinitionBuilder = _dicRq_('./dictionaryErrors/nameExistsErrorDefinitionBuilder');\nvalueExistsErrorDefinitionBuilder = _dicRq_('./dictionaryErrors/valueExistsErrorDefinitionBuilder');\nreservedNameErrorDefinitionBuilder = _dicRq_('./dictionaryErrors/reservedNameErrorDefinitionBuilder');\n\nfunction addErrorHandling(options) {\n  var errorHandling, reservedNameErrorDefinition;\n\n  reservedNameErrorDefinition = reservedNameErrorDefinitionBuilder.build(options.store);\n\n  errorHandling = options.errorHandling;\n  errorHandling.addErrorDefinition(nameExistsErrorDefinitionBuilder.build(options.store));\n  errorHandling.addErrorDefinition(valueExistsErrorDefinitionBuilder.build(options.store));\n  errorHandling.addErrorDefinition(reservedNameErrorDefinition);\n\n  errorHandling.addReservedName = reservedNameErrorDefinition.addReservedName;\n}\n\n_dcMd_.exports = {\n  addErrorHandling: addErrorHandling\n};\n\n},{\"./dictionaryErrors/nameExistsErrorDefinitionBuilder\":5,\"./dictionaryErrors/reservedNameErrorDefinitionBuilder\":6,\"./dictionaryErrors/valueExistsErrorDefinitionBuilder\":7}],5:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nvar strings, nameExistsError;\n\nstrings = _dicRq_('strings.js');\n\nnameExistsError = 'name \"{name}\" is already in use, value is {value}';\n\nfunction buildNameExistsError(nameValue, store) {\n  var errorText = strings.format(nameExistsError,\n  {\n    name: nameValue.name,\n    value: store.getValueKey(nameValue)\n  });\n\n  return new Error(errorText);\n}\n\nfunction nameExistsErrorCondition(nameValue, store) {\n  return !!store.nameValueMap[nameValue.name];\n}\n\nfunction buildValueExistsErrorDefinition (store) {\n  return {\n    errorName: 'nameExists',\n    errorCondition: function(nameValue) { return nameExistsErrorCondition(nameValue, store); },\n    errorBuilder: function(nameValue) { return buildNameExistsError(nameValue, store); }\n  };\n}\n\n_dcMd_.exports = {\n  build: buildValueExistsErrorDefinition\n};\n\n},{\"strings.js\":2}],6:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nvar strings, nameExistsError;\n\nstrings = _dicRq_('strings.js');\n\nnameExistsError = 'name \"{name}\" is reserved for {type} dictionary';\n\nfunction buildNameReservedError(nameValue, store) {\n  var errorText = strings.format(nameExistsError,\n  {\n    name: nameValue.name,\n    type: store.dictionaryName\n  });\n\n  return new Error(errorText);\n}\n\nfunction nameReservedErrorCondition(nameValue, reservedNames) {\n  return !!reservedNames[nameValue.name];\n}\n\nfunction addReservedName(name, reservedNames) {\n  reservedNames[name] = true;\n}\n\nfunction buildReservedNameErrorDefinition (store) {\n  var reservedNames = {};\n\n  return {\n    errorName: 'nameReserved',\n    errorCondition: function(nameValue) { return nameReservedErrorCondition(nameValue, reservedNames); },\n    errorBuilder: function(nameValue) { return buildNameReservedError(nameValue, store); },\n    addReservedName: function(name) { addReservedName(name, reservedNames); }\n  };\n}\n\n_dcMd_.exports = {\n  build: buildReservedNameErrorDefinition\n};\n\n},{\"strings.js\":2}],7:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nvar strings, valueExistsErrorText;\n\nstrings = _dicRq_('strings.js');\n\nvalueExistsErrorText = 'given name {givenName} with a value of \"{value}\" already exists with a name of \"{name}\"';\n\nfunction buildValueExistsError(nameValue, store) {\n  var errorText = strings.format(valueExistsErrorText,\n  {\n    givenName: nameValue.name,\n    name: store.valueNameMap[store.getValueKey(nameValue)],\n    value: store.getValueKey(nameValue)\n  });\n\n  return new Error(errorText);\n}\n\nfunction valueExistsErrorCondition(nameValue, store) {\n  return !!store.valueNameMap[nameValue.value];\n}\n\nfunction buildValueExistsErrorDefinition (store) {\n  return {\n    errorName: 'valueExists',\n    errorCondition: function(nameValue) { return valueExistsErrorCondition(nameValue, store); },\n    errorBuilder: function(nameValue) { return buildValueExistsError(nameValue, store); }\n  };\n}\n\n_dcMd_.exports = {\n  build: buildValueExistsErrorDefinition\n};\n\n},{\"strings.js\":2}],8:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nfunction throwRelevantError(errorValue, errorDefinitions) {\n  errorDefinitions.forEach(function (errorDefinition){\n    if(errorDefinition.condition(errorValue)) {\n      throw new Error(errorDefinition.buildError(errorValue));\n    }\n  });\n}\n\nfunction addErrorDefinition(errorDefinition, errorDefinitions) {\n  errorDefinitions.push({\n    condition: errorDefinition.errorCondition,\n    buildError: errorDefinition.errorBuilder\n  });\n}\n\nfunction buildErrorHandling(){\n  var errorHandling = {\n    errorDefinitions: [],\n    addErrorDefinition: function(errorDefinition){ addErrorDefinition( errorDefinition, errorHandling.errorDefinitions); },\n    throwRelevantError: function(errorValue) { throwRelevantError(errorValue, errorHandling.errorDefinitions);}\n  };\n\n  return errorHandling;\n}\n\n_dcMd_.exports = {\n  build: buildErrorHandling\n};\n\n},{}],9:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nvar errorHandlingBuilder, dictionaryErrorHandling;\n\nerrorHandlingBuilder = _dicRq_('../errorHandlingBuilder');\ndictionaryErrorHandling = _dicRq_('../dictionaryErrorHandling');\n\nfunction addErrorHandling(options) {\n  var errorHandling = errorHandlingBuilder.build();\n\n  dictionaryErrorHandling.addErrorHandling({\n    store: options.store,\n    dictionaryObjectName: options.dictionaryObjectName,\n    errorHandling: errorHandling\n  });\n\n  options.store.errorHandling = errorHandling;\n\n  return options.store;\n}\n\n_dcMd_.exports = {\n  addToStore: addErrorHandling\n};\n\n},{\"../dictionaryErrorHandling\":4,\"../errorHandlingBuilder\":8}],10:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nvar storeErrorHandlingManager;\n\nstoreErrorHandlingManager = _dicRq_('./errorHandlingManager');\n\nfunction buildDataStore(options) {\n  var storeBase;\n\n  storeBase = {\n    dictionaryName: options.dictionaryName,\n    nameValueMap: {},\n    valueNameMap: {},\n    getValueKey: options.getValueKey\n  };\n\n  storeBase = storeErrorHandlingManager.addToStore({\n    store: storeBase,\n    errorHandling: storeBase.errorHandling\n  });\n\n  storeBase.errorHandling.addReservedName('$add');\n\n  return storeBase;\n}\n\n_dcMd_.exports = {\n  build: buildDataStore\n};\n\n},{\"./errorHandlingManager\":9}],11:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nfunction addSingle(nameValue, store) {\n  var nameValueMap, valueNameMap;\n\n  nameValueMap = store.nameValueMap;\n  valueNameMap = store.valueNameMap;\n\n  nameValueMap[nameValue.name] = nameValue.value;\n  valueNameMap[store.getValueKey(nameValue)] = nameValue.name;\n}\n\nfunction checkAddSingle(options) {\n  options.errorHandling.throwRelevantError(options.nameValue);\n  addSingle(options.nameValue, options.store);\n}\n\nfunction addAll(nameValues, store) {\n  var keys;\n\n  keys = Object.keys(nameValues);\n\n  keys.forEach(function(name) {\n    checkAddSingle({\n      errorHandling: store.errorHandling,\n      store: store,\n      nameValue: { name: name, value: nameValues[name]}\n    });\n  });\n\n}\n\n_dcMd_.exports = {\n  addAll: addAll,\n  addSingle: addSingle\n};\n\n},{}],12:[function(_dicRq_,_dcMd_,exports){\n'use strict';\n\nvar storeBuilder, storeManagement;\n\nstoreBuilder = _dicRq_('./storeBuilder');\nstoreManagement = _dicRq_('./storeManagement');\n\nfunction addPropertyErrorHandling(options) {\n  Object.defineProperty(options.store,\n    'errorHandling',\n    {\n      enumerable: false,\n      configurable: false,\n      get: function() { return options.storeBase.errorHandling; }\n    });\n}\n\nfunction addPropertyAddReservedName(options) {\n  Object.defineProperty(options.store,\n    'addReservedName',\n    {\n      enumerable: false,\n      configurable: false,\n      get: function() { return options.storeBase.errorHandling.addReservedName; }\n    });\n}\n\nfunction addProperties(options) {\n  addPropertyErrorHandling(options);\n  addPropertyAddReservedName(options);\n}\n\nfunction createStore(storeBase) {\n  var store;\n\n  store = {\n    add: function(nameValues) { storeManagement.addAll(nameValues, storeBase); },\n    data: storeBase\n  };\n\n  return store;\n}\n\nfunction buildstoreManager(options) {\n  var storeBase, store;\n\n  storeBase = storeBuilder.build(options);\n  store = createStore(storeBase);\n\n  addProperties({\n    store: store,\n    storeBase: storeBase\n  });\n\n  return store;\n}\n\n_dcMd_.exports = {\n  build: buildstoreManager\n};\n\n},{\"./storeBuilder\":10,\"./storeManagement\":11}]},{},[1]);\n\n\n\n  return _dicRq_(itemToExport);\n}));\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar dictionary, build;\n\ndictionary = require('dictionary.js');\n\nbuild = function() {\n    var attributes = dictionary.build({\n      dictionaryName: 'attributes'\n    });\n\n    attributes.$add({\n      accesskey: 'accesskey',\n      class: 'class',\n      contenteditable: 'contenteditable',\n      contextmenu: 'contextmenu',\n      draggable: 'draggable',\n      dropzone: 'dropzone',\n      hidden: 'hidden',\n      id: 'id',\n      inert: 'inert',\n      itemid: 'itemid',\n      itemprop: 'itemprop',\n      itemref: 'itemref',\n      itemscope: 'itemscope',\n      itemtype: 'itemtype',\n      lang: 'lang',\n      xmlLang: 'xml:lang',\n      spellcheck: 'spellcheck',\n      style: 'style',\n      tabindex: 'tabindex',\n      title: 'title',\n      translate: 'translate',\n      role: 'role',\n      onabort: 'onabort',\n      ondragleave: 'ondragleave',\n      onload: 'onload',\n      onratechange: 'onratechange',\n      onblur: 'onblur',\n      ondragover: 'ondragover',\n      onloadeddata: 'onloadeddata',\n      onreset: 'onreset',\n      oncancel: 'oncancel',\n      ondragstart: 'ondragstart',\n      onloadedmetadata: 'onloadedmetadata',\n      onscroll: 'onscroll',\n      oncanplay: 'oncanplay',\n      ondrop: 'ondrop',\n      onloadstart: 'onloadstart',\n      onseeked: 'onseeked',\n      oncanplaythrough: 'oncanplaythrough',\n      ondurationchange: 'ondurationchange',\n      onmousedown: 'onmousedown',\n      onseeking:'onseeking',\n      onchange: 'onchange',\n      onemptied: 'onemptied',\n      onmousemove: 'onmousemove',\n      onselect: 'onselect',\n      onclick: 'onclick',\n      onended: 'onended',\n      onmouseout: 'onmouseout',\n      onshow: 'onshow',\n      onclose: 'onclose',\n      onerror: 'onerror',\n      onmouseover: 'onmouseover',\n      onsort: 'onsort',\n      oncontextmenu: 'oncontextmenu',\n      onfocus: 'onfocus',\n      onmouseup: 'onmouseup',\n      onstalled: 'onstalled',\n      oncuechange: 'oncuechange',\n      oninput: 'oninput',\n      onmousewheel: 'onmousewheel',\n      onsubmit: 'onsubmit',\n      ondblclick: 'ondblclick',\n      oninvalid: 'oninvalid',\n      onpause: 'onpause',\n      onsuspend: 'onsuspend',\n      ondrag: 'ondrag',\n      onkeydown: 'onkeydown',\n      onplay: 'onplay',\n      ontimeupdate: 'ontimeupdate',\n      ondragend: 'ondragend',\n      onkeypress: 'onkeypress',\n      onplaying: 'onplaying',\n      onvolumechange: 'onvolumechange',\n      ondragenter: 'ondragenter',\n      onkeyup: 'onkeyup',\n      onprogress: 'onprogress',\n      onwaiting: 'onwaiting',\n      download: 'download',\n      href: 'href',\n      hreflang: 'hreflang',\n      media: 'media',\n      ping: 'ping',\n      rel: 'rel',\n      target: 'target',\n      type: 'type',\n      alt: 'alt',\n      coords: 'coords',\n      shape: 'shape',\n      autoplay: 'autoplay',\n      controls: 'controls',\n      crossorigin: 'crossorigin',\n      loop: 'loop',\n      mediagroup: 'mediagroup',\n      muted: 'muted',\n      preload: 'preload',\n      src: 'src',\n      dir: 'dir',\n      cite: 'cite',\n      onafterprint: 'onafterprint',\n      onbeforeprint: 'onbeforeprint',\n      onbeforeunload: 'onbeforeunload',\n      onhashchange: 'onhashchange',\n      onmessage: 'onmessage',\n      onoffline: 'onoffline',\n      onpagehide: 'onpagehide',\n      onpageshow: 'onpageshow',\n      onpopstate: 'onpopstate',\n      onresize: 'onresize',\n      onunload: 'onunload',\n      autofocus: 'autofocus',\n      disabled: 'disabled',\n      form: 'form',\n      formaction: 'formaction',\n      formenctype: 'formenctype',\n      formmethod: 'formethod',\n      formonvalidate: 'formonvalidate',\n      formtarget: 'formtarget',\n      menu: 'menu',\n      name: 'name',\n      value: 'value',\n      height: 'height',\n      width: 'width',\n      span: 'span',\n      checked: 'checked',\n      command: 'command',\n      icon: 'icon',\n      label: 'label',\n      radiogroup: 'radiogroup',\n      datetime: 'datetime',\n      open: 'open',\n      acceptcharset: 'accept-charset',\n      action: 'action',\n      autocomplete: 'autocomplete',\n      enctype: 'enctype',\n      method: 'method',\n      novalidate: 'novalidate',\n      manifest: 'manifest',\n      xmlns: 'xmlns',\n      allowfullscreen: 'allowfullscreen',\n      sandbox: 'sandbox',\n      seamless: 'seamless',\n      srcdoc: 'srcdoc',\n      ismap: 'ismap',\n      srcset: 'srcset',\n      usemap: 'usemap',\n      accept: 'accept',\n      dirname: 'dirname',\n      inputmode: 'inputmode',\n      list: 'list',\n      max: 'max',\n      maxlength: 'maxlength',\n      min: 'min',\n      multiple: 'multiple',\n      pattern: 'pattern',\n      placeholder: 'placeholder',\n      readonly: 'readonly',\n      required: 'required',\n      size: 'size',\n      step: 'step',\n      challenge: 'challenge',\n      keytype: 'keytype',\n      for: 'for',\n      sizes: 'sizes',\n      default: 'default',\n      charset: 'charset',\n      content: 'content',\n      httpequiv: 'http-equiv',\n      high: 'high',\n      low: 'low',\n      optimum: 'optimum',\n      data: 'data',\n      typemustmatch: 'typemustmatch',\n      reversed: 'reversed',\n      start: 'start',\n      selected: 'selected',\n      xmlspace: 'xml:space',\n      async: 'async',\n      defer: 'defer',\n      scoped: 'scoped',\n      border: 'border',\n      sortable: 'sortable',\n      colspan: 'colspan',\n      headers: 'headers',\n      rowspan: 'rowspan',\n      cols: 'cols',\n      rows: 'rows',\n      wrap: 'wrap',\n      scope: 'scope',\n      sorted: 'sorted',\n      pubdate: 'pubdate',\n      kind: 'kind',\n      srclang: 'srclang',\n      poster: 'poster'\n  });\n\n  return attributes;\n};\n\nmodule.exports = {\n  build: build\n};\n\n},{\"dictionary.js\":2}],4:[function(require,module,exports){\n'use strict';\n\nvar domConstants, build;\n\ndomConstants = require('../helpers/domConstants');\n\nbuild = function() {\n  var classes = domConstants.build({\n    dictionaryName: 'cssClasses',\n    selectorSymbol: '.'\n  });\n\n  classes.$add({\n    active: 'active',\n    inactive: 'inactive'\n  });\n\n  return classes;\n};\n\nmodule.exports = {\n  build:build\n};\n\n},{\"../helpers/domConstants\":9}],5:[function(require,module,exports){\n'use strict';\n\nvar dictionary, build;\n\ndictionary = require('dictionary.js');\n\nbuild = function() {\n  var events = dictionary.build({\n    dictionaryName: 'events'\n  });\n\n  events.$add({\n    click: 'click',\n    abort: 'abort',\n    dragleave: 'dragleave',\n    load: 'load',\n    ratechange: 'ratechange',\n    blur: 'blur',\n    dragover: 'dragover',\n    loadeddata: 'loadeddata',\n    reset: 'reset',\n    cancel: 'cancel',\n    dragstart: 'dragstart',\n    loadedmetadata: 'loadedmetadata',\n    scroll: 'scroll',\n    canplay: 'canplay',\n    drop: 'drop',\n    loadstart: 'loadstart',\n    seeked: 'seeked',\n    canplaythrough: 'canplaythrough',\n    duratichange: 'duratichange',\n    mousedown: 'mousedown',\n    seeking:'seeking',\n    change: 'change',\n    emptied: 'emptied',\n    mousemove: 'mousemove',\n    select: 'select',\n    ended: 'ended',\n    mouseout: 'mouseout',\n    show: 'show',\n    close: 'close',\n    error: 'error',\n    mouseover: 'mouseover',\n    sort: 'sort',\n    ctextmenu: 'ctextmenu',\n    focus: 'focus',\n    mouseup: 'mouseup',\n    stalled: 'stalled',\n    cuechange: 'cuechange',\n    input: 'input',\n    mousewheel: 'mousewheel',\n    submit: 'submit',\n    dblclick: 'dblclick',\n    invalid: 'invalid',\n    pause: 'pause',\n    suspend: 'suspend',\n    drag: 'drag',\n    keydown: 'keydown',\n    play: 'play',\n    timeupdate: 'timeupdate',\n    dragend: 'dragend',\n    keypress: 'keypress',\n    playing: 'playing',\n    volumechange: 'volumechange',\n    dragenter: 'dragenter',\n    keyup: 'keyup',\n    progress: 'progress',\n    waiting: 'waiting',\n    afterprint: 'afterprint',\n    beforeprint: 'beforeprint',\n    beforeunload: 'beforeunload',\n    hashchange: 'hashchange',\n    message: 'message',\n    offline: 'offline',\n    pagehide: 'pagehide',\n    pageshow: 'pageshow',\n    popstate: 'popstate',\n    resize: 'resize',\n    unload: 'unload'\n  });\n\n  return events;\n};\n\nmodule.exports = {\n  build:build\n};\n\n},{\"dictionary.js\":2}],6:[function(require,module,exports){\n'use strict';\n\nvar domConstants, build;\n\ndomConstants = require('./../helpers/domConstants');\n\nbuild = function() {\n  var ids = domConstants.build({\n    dictionaryName: 'ids',\n    selectorSymbol: '#'\n  });\n\n  ids.$add({});\n\n  return ids;\n};\n\nmodule.exports = {\n  build:build\n};\n\n},{\"./../helpers/domConstants\":9}],7:[function(require,module,exports){\n'use strict';\n\nvar dictionary, build;\n\ndictionary = require('dictionary.js');\n\nfunction buildLocalizationValue(localizationValue, baseDictionary) {\n  return {\n    name: localizationValue,\n    getLocalizedValue: function() { return baseDictionary.$getLocalizedValue(localizationValue); }\n  };\n}\n\nfunction extendAddFunction(baseDictionary) {\n  var superAdd;\n\n  superAdd = baseDictionary.$add;\n\n  baseDictionary.$add = function(nameValues) {\n    var givenValues, nameValueNames;\n\n    givenValues = {};\n    nameValueNames = Object.keys(nameValues);\n\n    nameValueNames.forEach(function(localizationName) {\n      givenValues[localizationName] = buildLocalizationValue(nameValues[localizationName], baseDictionary);\n    });\n\n    superAdd(givenValues);\n  };\n}\n\nbuild = function() {\n  var localizations;\n\n  // instead of linking the function directly, we link a function that calls the function, this allows us\n  // to change or set getLocalizedValue at a later time after adding the localization value.\n  localizations = dictionary.build({\n    dictionaryName: 'localizations',\n    reservedNames: ['$setGetLocalizedValueFunction', '$getLocalizedValue'],\n    valueKeyFunction: function(nameValue) {\n        return nameValue.value.name;\n      }\n  });\n\n  localizations.$setGetLocalizedValueFunction = function(getLocalizedValue) {\n    localizations.$getLocalizedValue = getLocalizedValue;\n  };\n\n  extendAddFunction(localizations);\n\n  localizations.$add({});\n\n  return localizations;\n};\n\nmodule.exports = {\n  build: build,\n  buildLocalizationValue: buildLocalizationValue,\n  extendAddFunction: extendAddFunction\n};\n\n},{\"dictionary.js\":2}],8:[function(require,module,exports){\n'use strict';\n\nvar dictionary, build;\n\ndictionary = require('dictionary.js');\n\nfunction buildHtmlTagValue(tagName, baseConstantsObject) {\n  var html = '<' + tagName + ' />';\n\n  return {\n    html: html,\n    name: tagName,\n    buildElement: function() {\n      return baseConstantsObject.$elementBuilder(html);\n    }\n  };\n}\n\nfunction extendAddFunction(baseConstantsObject) {\n  var superAdd;\n  superAdd = baseConstantsObject.$add;\n\n  baseConstantsObject.$add = function(nameValues) {\n    // we should be able to simply add the name, img, div, span, then make a tag out of it.\n    var givenValues, nameValueNames;\n\n    givenValues = {};\n    nameValueNames = Object.keys(nameValues);\n\n    nameValueNames.forEach(function(tagName) {\n      givenValues[tagName] = buildHtmlTagValue(nameValues[tagName], baseConstantsObject);\n    });\n\n    superAdd(givenValues);\n  };\n\n}\n\nfunction addHtmlTags(tags){\n  tags.$add({\n    anchor: 'a',\n    abbr: 'abbr',\n    address: 'address',\n    area: 'area',\n    article: 'article',\n    aside: 'aside',\n    audio: 'audio',\n    b: 'b',\n    base: 'base',\n    bdi: 'bdi',\n    bdo: 'bdo',\n    blockquote: 'blockquote',\n    body: 'body',\n    br: 'br',\n    button: 'button',\n    canvas: 'canvas',\n    caption: 'caption',\n    cite: 'cite',\n    code: 'code',\n    col: 'col',\n    colgroup: 'colgroup',\n    command: 'command',\n    data: 'data',\n    datalist: 'datalist',\n    dd: 'dd',\n    del: 'del',\n    details: 'details',\n    dfn: 'dfn',\n    dialog: 'dialog',\n    div: 'div',\n    dl: 'dl',\n    dt: 'dt',\n    em: 'em',\n    embed: 'embed',\n    fieldset: 'fieldset',\n    figcaption: 'figcaption',\n    figure: 'figure',\n    footer: 'footer',\n    form: 'form',\n    h1: 'h1',\n    h2: 'h2',\n    h3: 'h3',\n    h4: 'h4',\n    h5: 'h5',\n    h6: 'h6',\n    head: 'head',\n    header: 'hedaer',\n    hgroup: 'hgroup',\n    hr: 'hr',\n    html: 'html',\n    i: 'i',\n    iframe: 'iframe',\n    img: 'img',\n    input: 'input',\n    ins: 'ins',\n    kbd: 'kbd',\n    keygen: 'keygen',\n    label: 'label',\n    legend: 'legend',\n    li: 'li',\n    link: 'link',\n    main: 'main',\n    map: 'map',\n    mark: 'mark',\n    menu: 'menu',\n    menuitem: 'menuitem',\n    meta: 'meta',\n    meter: 'meter',\n    nav: 'nav',\n    noscript: 'noscript',\n    object: 'object',\n    ol: 'ol',\n    optgroup: 'optgroup',\n    option: 'option',\n    output: 'output',\n    p: 'p',\n    param: 'param',\n    pre: 'pre',\n    progress: 'progress',\n    q: 'q',\n    rp: 'rp',\n    rt: 'rt',\n    ruby: 'ruby',\n    s: 's',\n    samp: 'samp',\n    script: 'script',\n    section: 'section',\n    select: 'select',\n    small: 'small',\n    source: 'source',\n    span: 'span',\n    strong: 'strong',\n    style: 'style',\n    sub: 'sub',\n    summary: 'summary',\n    sup: 'sup',\n    table: 'table',\n    tbody: 'tbody',\n    td: 'td',\n    textarea: 'textarea',\n    tfoot: 'tfoot',\n    th: 'th',\n    thead: 'thead',\n    time: 'time',\n    title: 'title',\n    tr: 'tr',\n    track: 'track',\n    u: 'u',\n    ul: 'ul',\n    var: 'var',\n    video: 'video',\n    wbr: 'wbr'\n  });\n}\n\nbuild = function() {\n  var tags;\n\n  tags = dictionary.build({\n    dictionaryName: 'tags',\n    reservedNames: ['$elementBuilder', '$setElementBuilderFunction'],\n    valueKeyFunction: function(nameValue) {\n      return nameValue.value.name;\n    }\n  });\n\n  tags.$setElementBuilderFunction = function(elementBuilder) {\n    tags.$elementBuilder = elementBuilder;\n  };\n\n  extendAddFunction(tags);\n\n  addHtmlTags(tags);\n\n  return tags;\n};\n\nmodule.exports = {\n  build: build,\n  extendAddFunction: extendAddFunction,\n  buildHtmlTagValue: buildHtmlTagValue,\n  addHtmlTags: addHtmlTags\n};\n\n},{\"dictionary.js\":2}],9:[function(require,module,exports){\n'use strict';\n\nvar dictionary, buildDomConstantsObject;\n\ndictionary = require('dictionary.js');\n\nfunction buildConstantsObject(options) {\n  var domConstants, reservedNames;\n\n  reservedNames = options.reservedNames ? options.reservedNames : [];\n  reservedNames.push('$setFindElementsFunction');\n\n  domConstants = dictionary.build({\n    reservedNames: reservedNames,\n    dictionaryName: options.dictionaryName,\n    valueKeyFunction: function(nameValue) {\n      return nameValue.value.name;\n    }\n  });\n\n  return domConstants;\n}\n\nfunction createDomValue(domValue, domConstants, selectorSymbol){\n  var selector = selectorSymbol + domValue;\n\n  return {\n    name: domValue,\n    selector: selector,\n    findElements: function() {\n      return domConstants.$findElements(selector);\n    }\n  };\n}\n\nfunction extendAddFunction(addDefinition) {\n  var superAdd = addDefinition.constantsBase.$add;\n\n  addDefinition.constantsBase.$add = function(nameValues) {\n    var valuesToAdd, nameValueNames;\n\n    valuesToAdd = {};\n\n    nameValueNames = Object.keys(nameValues);\n\n    nameValueNames.forEach(function(domName){\n      valuesToAdd[domName] = createDomValue(nameValues[domName], addDefinition.constantsBase, addDefinition.selectorSymbol);\n    });\n\n    superAdd(valuesToAdd);\n  };\n}\n\nbuildDomConstantsObject = function(options) {\n  var domConstant;\n\n  domConstant = buildConstantsObject(options);\n\n  extendAddFunction({\n    selectorSymbol: options.selectorSymbol,\n    constantsBase: domConstant\n  });\n\n  domConstant.$setFindElementsFunction = function(findElements) {\n    domConstant.$findElements = findElements;\n  };\n\n  return domConstant;\n};\n\nmodule.exports = {\n  build: buildDomConstantsObject,\n  extendAddFunction: extendAddFunction,\n  createDomValue: createDomValue\n};\n\n},{\"dictionary.js\":2}]},{},[1]);\n"],"sourceRoot":"/source/"};

  return _conRq_(itemToExport);
}));